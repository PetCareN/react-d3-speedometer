{"version":3,"file":"main.4248fb9db009bedde424.bundle.js","sources":["webpack:///./src/util/index.js"],"sourcesContent":["import { scaleLinear as d3ScaleLinear } from \"d3\"\n\n// export validators\nexport function calculateNeedleHeight(height_ratio, radius) {\n  if (height_ratio < 0 || height_ratio > 1) {\n    throw new Error(`Invalid needleHeightRatio given - ${height_ratio}`)\n  }\n  return Math.round(radius * height_ratio)\n}\n\nexport function calculateSegmentLabelCount(maxSegmentLabelCount, segmentCount) {\n  const max_segment_label_count = parseInt(maxSegmentLabelCount, 10)\n  const segments_count = parseInt(segmentCount, 10)\n\n  return max_segment_label_count &&\n    max_segment_label_count > 0 &&\n    max_segment_label_count <= segmentCount\n    ? max_segment_label_count\n    : segmentCount\n}\n\n// calculate d3 scale\nexport function calculateScale({ min, max, segments }) {\n  return d3ScaleLinear()\n    .range([0, 1])\n    .domain([min, max])\n    .nice(segments)\n}\n\n// calculate ticks\nexport function calculateTicks(scale, { min, max, segments }) {\n  let ticks = []\n  ticks = scale.ticks(segments)\n\n  // [d3-scale][issue]: https://github.com/d3/d3-scale/issues/149\n  if (ticks.length === 1) {\n    // we have this specific `d3 ticks` behaviour stepping in a specific way\n    ticks = [min, max]\n  }\n\n  return ticks\n}\n"],"mappings":"AAUA","sourceRoot":""}